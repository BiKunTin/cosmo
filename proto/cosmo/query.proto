syntax = "proto3";
package BiKunTin.cosmo.cosmo;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "cosmo/vote.proto";
import "cosmo/poll.proto";
import "cosmo/comment.proto";
import "cosmo/post.proto";

option go_package = "github.com/BiKunTin/cosmo/x/cosmo/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2
	rpc Vote(QueryGetVoteRequest) returns (QueryGetVoteResponse) {
		option (google.api.http).get = "/BiKunTin/cosmo/cosmo/vote/{id}";
	}
	rpc VoteAll(QueryAllVoteRequest) returns (QueryAllVoteResponse) {
		option (google.api.http).get = "/BiKunTin/cosmo/cosmo/vote";
	}

	rpc Poll(QueryGetPollRequest) returns (QueryGetPollResponse) {
		option (google.api.http).get = "/BiKunTin/cosmo/cosmo/poll/{id}";
	}
	rpc PollAll(QueryAllPollRequest) returns (QueryAllPollResponse) {
		option (google.api.http).get = "/BiKunTin/cosmo/cosmo/poll";
	}

	rpc Comment(QueryGetCommentRequest) returns (QueryGetCommentResponse) {
		option (google.api.http).get = "/BiKunTin/cosmo/cosmo/comment/{id}";
	}
	rpc CommentAll(QueryAllCommentRequest) returns (QueryAllCommentResponse) {
		option (google.api.http).get = "/BiKunTin/cosmo/cosmo/comment";
	}

	rpc Post(QueryGetPostRequest) returns (QueryGetPostResponse) {
		option (google.api.http).get = "/BiKunTin/cosmo/cosmo/post/{id}";
	}
	rpc PostAll(QueryAllPostRequest) returns (QueryAllPostResponse) {
		option (google.api.http).get = "/BiKunTin/cosmo/cosmo/post";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetVoteRequest {
	uint64 id = 1;
}

message QueryGetVoteResponse {
	Vote Vote = 1;
}

message QueryAllVoteRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllVoteResponse {
	repeated Vote Vote = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetPollRequest {
	uint64 id = 1;
}

message QueryGetPollResponse {
	Poll Poll = 1;
}

message QueryAllPollRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPollResponse {
	repeated Poll Poll = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetCommentRequest {
	uint64 id = 1;
}

message QueryGetCommentResponse {
	Comment Comment = 1;
}

message QueryAllCommentRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCommentResponse {
	repeated Comment Comment = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetPostRequest {
	uint64 id = 1;
}

message QueryGetPostResponse {
	Post Post = 1;
}

message QueryAllPostRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPostResponse {
	repeated Post Post = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
